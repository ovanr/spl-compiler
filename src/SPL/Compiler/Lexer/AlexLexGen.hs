{-# OPTIONS_GHC -fno-warn-unused-binds -fno-warn-missing-signatures #-}
{-# LANGUAGE CPP #-}
{-# LINE 1 "AlexLexGen.x" #-}

{-# LANGUAGE OverloadedStrings #-}

module SPL.Compiler.Lexer.AlexLexGen 
    (
    tokenize, 
    Token(..),
    SPLToken(..), 
    Type(..),
    Keyword(..), 
    AlexPosn(..),
    ) where

import Control.Applicative
import qualified Data.ByteString.Lazy as B
import qualified Data.Text as T
import qualified Data.Text.Encoding as TE

#if __GLASGOW_HASKELL__ >= 603
#include "ghcconfig.h"
#elif defined(__GLASGOW_HASKELL__)
#include "config.h"
#endif
#if __GLASGOW_HASKELL__ >= 503
import Data.Array
#else
import Array
#endif
{-# LINE 1 "templates/wrappers.hs" #-}
-- -----------------------------------------------------------------------------
-- Alex wrapper code.
--
-- This code is in the PUBLIC DOMAIN; you may copy it freely and use
-- it for any purpose whatsoever.


import Control.Applicative as App (Applicative (..))


import Data.Word (Word8)


import Data.Int (Int64)
import qualified Data.Char
import qualified Data.ByteString.Lazy     as ByteString
import qualified Data.ByteString.Internal as ByteString (w2c)










































type Byte = Word8

-- -----------------------------------------------------------------------------
-- The input type






















type AlexInput = (AlexPosn,     -- current position,
                  Char,         -- previous char
                  ByteString.ByteString,        -- current input string
                  Int64)           -- bytes consumed so far

ignorePendingBytes :: AlexInput -> AlexInput
ignorePendingBytes i = i   -- no pending bytes when lexing bytestrings

alexInputPrevChar :: AlexInput -> Char
alexInputPrevChar (_,c,_,_) = c

alexGetByte :: AlexInput -> Maybe (Byte,AlexInput)
alexGetByte (p,_,cs,n) =
    case ByteString.uncons cs of
        Nothing -> Nothing
        Just (b, cs') ->
            let c   = ByteString.w2c b
                p'  = alexMove p c
                n'  = n+1
            in p' `seq` cs' `seq` n' `seq` Just (b, (p', c, cs',n'))






































-- -----------------------------------------------------------------------------
-- Token positions

-- `Posn' records the location of a token in the input text.  It has three
-- fields: the address (number of chacaters preceding the token), line number
-- and column of a token within the file. `start_pos' gives the position of the
-- start of the file and `eof_pos' a standard encoding for the end of file.
-- `move_pos' calculates the new position after traversing a given character,
-- assuming the usual eight character tab stops.


data AlexPosn = AlexPn !Int !Int !Int
        deriving (Eq,Show)

alexStartPos :: AlexPosn
alexStartPos = AlexPn 0 1 1

alexMove :: AlexPosn -> Char -> AlexPosn
alexMove (AlexPn a l c) '\t' = AlexPn (a+1)  l     (c+alex_tab_size-((c-1) `mod` alex_tab_size))
alexMove (AlexPn a l _) '\n' = AlexPn (a+1) (l+1)   1
alexMove (AlexPn a l c) _    = AlexPn (a+1)  l     (c+1)


-- -----------------------------------------------------------------------------
-- Monad (default and with ByteString input)


data AlexState = AlexState {
        alex_pos :: !AlexPosn,  -- position at current input location





        alex_bpos:: !Int64,     -- bytes consumed so far
        alex_inp :: ByteString.ByteString,      -- the current input
        alex_chr :: !Char,      -- the character before the input

        alex_scd :: !Int        -- the current startcode

      , alex_ust :: AlexUserState -- AlexUserState will be defined in the user program

    }

-- Compile with -funbox-strict-fields for best results!






runAlex :: ByteString.ByteString -> Alex a -> Either String a
runAlex input__ (Alex f)
   = case f (AlexState {alex_bpos = 0,

                        alex_pos = alexStartPos,
                        alex_inp = input__,
                        alex_chr = '\n',

                        alex_ust = alexInitUserState,

                        alex_scd = 0}) of Left msg -> Left msg
                                          Right ( _, a ) -> Right a

newtype Alex a = Alex { unAlex :: AlexState -> Either String (AlexState, a) }

instance Functor Alex where
  fmap f a = Alex $ \s -> case unAlex a s of
                            Left msg -> Left msg
                            Right (s', a') -> Right (s', f a')

instance Applicative Alex where
  pure a   = Alex $ \s -> Right (s, a)
  fa <*> a = Alex $ \s -> case unAlex fa s of
                            Left msg -> Left msg
                            Right (s', f) -> case unAlex a s' of
                                               Left msg -> Left msg
                                               Right (s'', b) -> Right (s'', f b)

instance Monad Alex where
  m >>= k  = Alex $ \s -> case unAlex m s of
                                Left msg -> Left msg
                                Right (s',a) -> unAlex (k a) s'
  return = App.pure

alexGetInput :: Alex AlexInput
alexGetInput




 = Alex $ \s@AlexState{alex_pos=pos,alex_bpos=bpos,alex_chr=c,alex_inp=inp__} ->
        Right (s, (pos,c,inp__,bpos))


alexSetInput :: AlexInput -> Alex ()




alexSetInput (pos,c,inp__,bpos)
 = Alex $ \s -> case s{alex_pos=pos,
                       alex_bpos=bpos,
                       alex_chr=c,
                       alex_inp=inp__} of

                  state__@(AlexState{}) -> Right (state__, ())

alexError :: String -> Alex a
alexError message = Alex $ const $ Left message

alexGetStartCode :: Alex Int
alexGetStartCode = Alex $ \s@AlexState{alex_scd=sc} -> Right (s, sc)

alexSetStartCode :: Int -> Alex ()
alexSetStartCode sc = Alex $ \s -> Right (s{alex_scd=sc}, ())









alexMonadScan = do



  inp__@(_,_,_,n) <- alexGetInput

  sc <- alexGetStartCode
  case alexScan inp__ sc of
    AlexEOF -> alexEOF
    AlexError ((AlexPn _ line column),_,_,_) -> alexError $ "lexical error at line " ++ (show line) ++ ", column " ++ (show column)
    AlexSkip  inp__' _len -> do
        alexSetInput inp__'
        alexMonadScan



    AlexToken inp__'@(_,_,_,n') _ action -> let len = n'-n in do

        alexSetInput inp__'
        action (ignorePendingBytes inp__) len

-- -----------------------------------------------------------------------------
-- Useful token actions




type AlexAction result = AlexInput -> Int64 -> Alex result


-- just ignore this token and scan another one
-- skip :: AlexAction result
skip _input _len = alexMonadScan

-- ignore this token, but set the start code to a new value
-- begin :: Int -> AlexAction result
begin code _input _len = do alexSetStartCode code; alexMonadScan

-- perform an action for this token, and set the start code to a new value
andBegin :: AlexAction result -> Int -> AlexAction result
(action `andBegin` code) input__ len = do
  alexSetStartCode code
  action input__ len




token :: (AlexInput -> Int64 -> token) -> AlexAction token

token t input__ len = return (t input__ len)



-- -----------------------------------------------------------------------------
-- Basic wrapper
























-- -----------------------------------------------------------------------------
-- Basic wrapper, ByteString version
































-- -----------------------------------------------------------------------------
-- Posn wrapper

-- Adds text positions to the basic model.













-- -----------------------------------------------------------------------------
-- Posn wrapper, ByteString version














-- -----------------------------------------------------------------------------
-- GScan wrapper

-- For compatibility with previous versions of Alex, and because we can.














alex_tab_size :: Int
alex_tab_size = 8
alex_base :: Array Int Int
alex_base = listArray (0 :: Int, 99)
  [ -8
  , 13
  , -33
  , 259
  , -32
  , 387
  , 515
  , 643
  , 771
  , 899
  , 1027
  , 1155
  , 1268
  , 0
  , 1396
  , 0
  , 1509
  , 0
  , 108
  , 0
  , 1574
  , 0
  , 1687
  , 0
  , 1800
  , 2056
  , 1992
  , 0
  , 2248
  , 2366
  , 2185
  , 0
  , 0
  , 2431
  , 0
  , 2496
  , 2752
  , 2688
  , 0
  , 2944
  , 2880
  , 0
  , 0
  , 3126
  , -39
  , 0
  , 0
  , 261
  , 3372
  , 3104
  , 3344
  , 3589
  , 3673
  , 3757
  , 3841
  , 3925
  , 4009
  , 4093
  , 0
  , -31
  , 4177
  , 4261
  , 70
  , 4345
  , 4429
  , 4513
  , 4597
  , 4681
  , 4765
  , 4849
  , 4933
  , 5017
  , 5101
  , 5185
  , 5269
  , 5353
  , 5437
  , 5521
  , 5605
  , 5689
  , 5773
  , 5857
  , 5941
  , 6025
  , 6109
  , 6193
  , 6277
  , 6361
  , 6445
  , 6529
  , 6613
  , 6697
  , 6781
  , 6865
  , 6949
  , 7033
  , 7117
  , -30
  , 0
  , 0
  ]

alex_table :: Array Int Int
alex_table = listArray (0 :: Int, 7372)
  [ 0
  , 47
  , 47
  , 47
  , 47
  , 47
  , 98
  , 99
  , 42
  , 99
  , 0
  , 46
  , 0
  , 0
  , 0
  , 0
  , 48
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 45
  , 47
  , 58
  , 0
  , 0
  , 0
  , 58
  , 58
  , 29
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 59
  , 62
  , 62
  , 62
  , 62
  , 62
  , 62
  , 62
  , 62
  , 62
  , 62
  , 58
  , 58
  , 58
  , 58
  , 58
  , 44
  , 0
  , 80
  , 77
  , 85
  , 80
  , 80
  , 78
  , 80
  , 80
  , 87
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 84
  , 80
  , 76
  , 80
  , 80
  , 80
  , 80
  , 58
  , 0
  , 58
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 86
  , 80
  , 80
  , 80
  , 95
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 79
  , 80
  , 80
  , 80
  , 67
  , 82
  , 80
  , 80
  , 80
  , 58
  , 58
  , 58
  , 62
  , 62
  , 62
  , 62
  , 62
  , 62
  , 62
  , 62
  , 62
  , 62
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 39
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 40
  , 5
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 35
  , 7
  , 23
  , 23
  , 23
  , 24
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 47
  , 47
  , 47
  , 47
  , 47
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 47
  , 0
  , 0
  , 0
  , 0
  , 97
  , 26
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 25
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 26
  , 10
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 18
  , 14
  , 13
  , 13
  , 13
  , 12
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 39
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 36
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 5
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 6
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 28
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 25
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 9
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 18
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 10
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 17
  , 20
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 30
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 33
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 35
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 3
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 28
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 30
  , 9
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 19
  , 20
  , 11
  , 15
  , 15
  , 15
  , 16
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 37
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 40
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , -1
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 39
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 40
  , 5
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 34
  , 35
  , 7
  , 23
  , 23
  , 23
  , 24
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 36
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 37
  , 6
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 33
  , 8
  , 21
  , 21
  , 21
  , 22
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 51
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 52
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 60
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 61
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 96
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 63
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 93
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 92
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 91
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 65
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 66
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 89
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 88
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 69
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 71
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 83
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 81
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 75
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 74
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 73
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 72
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 70
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 68
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 90
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 94
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 64
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 57
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 56
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 55
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 54
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 53
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 50
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 80
  , 0
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 49
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 80
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  ]

alex_check :: Array Int Int
alex_check = listArray (0 :: Int, 7372)
  [ -1
  , 9
  , 10
  , 11
  , 12
  , 13
  , 39
  , 39
  , 47
  , 39
  , -1
  , 42
  , -1
  , -1
  , -1
  , -1
  , 47
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 10
  , 32
  , 33
  , -1
  , -1
  , -1
  , 37
  , 38
  , 39
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 42
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , -1
  , 93
  , -1
  , -1
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , 124
  , 125
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 10
  , 9
  , 10
  , 11
  , 12
  , 13
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 32
  , -1
  , -1
  , -1
  , -1
  , 39
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 0
  , 1
  , 2
  , 3
  , 4
  , 5
  , 6
  , 7
  , 8
  , 9
  , 10
  , 11
  , 12
  , 13
  , 14
  , 15
  , 16
  , 17
  , 18
  , 19
  , 20
  , 21
  , 22
  , 23
  , 24
  , 25
  , 26
  , 27
  , 28
  , 29
  , 30
  , 31
  , 32
  , 33
  , 34
  , 35
  , 36
  , 37
  , 38
  , 39
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 63
  , 64
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , 92
  , 93
  , 94
  , 95
  , 96
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , 124
  , 125
  , 126
  , 127
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 0
  , 1
  , 2
  , 3
  , 4
  , 5
  , 6
  , 7
  , 8
  , 9
  , 10
  , 11
  , 12
  , 13
  , 14
  , 15
  , 16
  , 17
  , 18
  , 19
  , 20
  , 21
  , 22
  , 23
  , 24
  , 25
  , 26
  , 27
  , 28
  , 29
  , 30
  , 31
  , 32
  , 33
  , 34
  , 35
  , 36
  , 37
  , 38
  , 39
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 63
  , 64
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , 92
  , 93
  , 94
  , 95
  , 96
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , 124
  , 125
  , 126
  , 127
  , 10
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 92
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 0
  , 1
  , 2
  , 3
  , 4
  , 5
  , 6
  , 7
  , 8
  , 9
  , 10
  , 11
  , 12
  , 13
  , 14
  , 15
  , 16
  , 17
  , 18
  , 19
  , 20
  , 21
  , 22
  , 23
  , 24
  , 25
  , 26
  , 27
  , 28
  , 29
  , 30
  , 31
  , 32
  , 33
  , 34
  , 35
  , 36
  , 37
  , 38
  , 39
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 63
  , 64
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , 92
  , 93
  , 94
  , 95
  , 96
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , 124
  , 125
  , 126
  , 127
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 0
  , 1
  , 2
  , 3
  , 4
  , 5
  , 6
  , 7
  , 8
  , 9
  , 10
  , 11
  , 12
  , 13
  , 14
  , 15
  , 16
  , 17
  , 18
  , 19
  , 20
  , 21
  , 22
  , 23
  , 24
  , 25
  , 26
  , 27
  , 28
  , 29
  , 30
  , 31
  , 32
  , 33
  , 34
  , 35
  , 36
  , 37
  , 38
  , 39
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 63
  , 64
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , 92
  , 93
  , 94
  , 95
  , 96
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , 124
  , 125
  , 126
  , 127
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 10
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 42
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 10
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  ]

alex_deflt :: Array Int Int
alex_deflt = listArray (0 :: Int, 99)
  [ -1
  , 43
  , -1
  , 4
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 17
  , 17
  , -1
  , 19
  , 19
  , 27
  , 27
  , 31
  , 31
  , 32
  , 32
  , 34
  , 34
  , 4
  , 4
  , 4
  , 2
  , 2
  , 2
  , 2
  , 38
  , 38
  , 41
  , 41
  , 48
  , 48
  , 48
  , 43
  , 43
  , 43
  , -1
  , 43
  , -1
  , -1
  , -1
  , -1
  , 48
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  ]

alex_accept = listArray (0 :: Int, 99)
  [ AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAcc 57
  , AlexAcc 56
  , AlexAcc 55
  , AlexAcc 54
  , AlexAcc 53
  , AlexAcc 52
  , AlexAcc 51
  , AlexAcc 50
  , AlexAcc 49
  , AlexAcc 48
  , AlexAcc 47
  , AlexAcc 46
  , AlexAcc 45
  , AlexAcc 44
  , AlexAcc 43
  , AlexAcc 42
  , AlexAcc 41
  , AlexAcc 40
  , AlexAcc 39
  , AlexAcc 38
  , AlexAcc 37
  , AlexAcc 36
  , AlexAcc 35
  , AlexAcc 34
  , AlexAcc 33
  , AlexAcc 32
  , AlexAcc 31
  , AlexAcc 30
  , AlexAcc 29
  , AlexAcc 28
  , AlexAcc 27
  , AlexAcc 26
  , AlexAcc 25
  , AlexAcc 24
  , AlexAcc 23
  , AlexAcc 22
  , AlexAcc 21
  , AlexAcc 20
  , AlexAcc 19
  , AlexAcc 18
  , AlexAcc 17
  , AlexAcc 16
  , AlexAcc 15
  , AlexAcc 14
  , AlexAcc 13
  , AlexAcc 12
  , AlexAcc 11
  , AlexAcc 10
  , AlexAcc 9
  , AlexAcc 8
  , AlexAcc 7
  , AlexAcc 6
  , AlexAcc 5
  , AlexAcc 4
  , AlexAcc 3
  , AlexAcc 2
  , AlexAcc 1
  , AlexAcc 0
  ]

alex_actions = array (0 :: Int, 58)
  [ (57,alex_action_0)
  , (56,alex_action_1)
  , (55,alex_action_2)
  , (54,alex_action_3)
  , (53,alex_action_4)
  , (52,alex_action_5)
  , (51,alex_action_6)
  , (50,alex_action_7)
  , (49,alex_action_8)
  , (48,alex_action_9)
  , (47,alex_action_10)
  , (46,alex_action_11)
  , (45,alex_action_12)
  , (44,alex_action_13)
  , (43,alex_action_14)
  , (42,alex_action_15)
  , (41,alex_action_16)
  , (40,alex_action_16)
  , (39,alex_action_17)
  , (38,alex_action_18)
  , (37,alex_action_19)
  , (36,alex_action_20)
  , (35,alex_action_20)
  , (34,alex_action_20)
  , (33,alex_action_20)
  , (32,alex_action_20)
  , (31,alex_action_20)
  , (30,alex_action_20)
  , (29,alex_action_20)
  , (28,alex_action_20)
  , (27,alex_action_20)
  , (26,alex_action_20)
  , (25,alex_action_20)
  , (24,alex_action_20)
  , (23,alex_action_20)
  , (22,alex_action_20)
  , (21,alex_action_20)
  , (20,alex_action_20)
  , (19,alex_action_20)
  , (18,alex_action_20)
  , (17,alex_action_20)
  , (16,alex_action_20)
  , (15,alex_action_20)
  , (14,alex_action_20)
  , (13,alex_action_20)
  , (12,alex_action_20)
  , (11,alex_action_20)
  , (10,alex_action_20)
  , (9,alex_action_20)
  , (8,alex_action_20)
  , (7,alex_action_20)
  , (6,alex_action_20)
  , (5,alex_action_20)
  , (4,alex_action_20)
  , (3,alex_action_20)
  , (2,alex_action_21)
  , (1,alex_action_21)
  , (0,alex_action_22)
  ]

{-# LINE 80 "AlexLexGen.x" #-}


-- token :: (AlexInput -> Int64 -> token) -> AlexAction token

-- produce Token with position
produceToken :: (AlexInput -> Int64 -> SPLToken) -> AlexInput -> Int64 -> Token
produceToken f ctx len = MkToken (getCurrentPosn ctx) (f ctx len)

data Token =
      MkToken AlexPosn SPLToken
    | EOF
    deriving (Eq, Show)

data SPLToken = 
      KeywordToken Keyword
    | TypeToken Type
    | SymbolToken Char
    | IntToken Integer
    | CharToken Char
    | BoolToken Bool
    | IdentifierToken T.Text
    deriving (Eq)

data Keyword =
      Var
    | If
    | Else
    | While
    | Return
    deriving (Eq)

data Type =
      IntType
    | BoolType
    | CharType
    | VoidType
    deriving (Eq)

instance Show Type where
    show IntType = "Int"
    show BoolType = "Bool"
    show CharType = "Char"
    show VoidType = "Void"

instance Show Keyword where
    show Var = "var"
    show If = "if"
    show Else = "else"
    show While = "while"
    show Return = "return"

instance Show SPLToken where
    show (KeywordToken k) = show k
    show (TypeToken t) = show t
    show (SymbolToken c) = [c]
    show (IntToken i) = show i
    show (CharToken c) = show c
    show (BoolToken b) = show b
    show (IdentifierToken i) = T.unpack i

alexEOF = return EOF

-- Convert a Lazy Bytestring to Text
lazyBStoText :: B.ByteString -> T.Text
lazyBStoText = TE.decodeUtf8 . B.toStrict 

-- Get the current parsed token as T.Text
getCurrentToken :: AlexInput -> Int64 -> T.Text
getCurrentToken (_,_,s,_) l = T.take (fromIntegral l) $ lazyBStoText s

getCurrentPosn :: AlexInput -> AlexPosn
getCurrentPosn (pos,_,_,_) = pos

-- Retrieve all tokens.
-- Note that failures are automatically captured by the Alex monad instance.
-- i.e. we get (Left err) and thus the bind (>>=) operator short-circuits
getAllResults :: Alex [Token]
getAllResults = do
    x <- alexMonadScan'
    case x of
        EOF -> return [x]
        _ -> do
            xs <- getAllResults
            return $ x:xs

-- Pass in additional state to the Lexer.
-- The current filepath and the file contents
-- are used to give us nicer error messages
data AlexUserState = AlexUserState { 
    filePath :: FilePath, 
    contents :: B.ByteString 
}

-- Parse a single token.
-- Identical to generated alexMonadScan function
-- but with nicer error message (AlexError match)
alexMonadScan' = do
  inp__@(_,_,_,n) <- alexGetInput
  sc <- alexGetStartCode
  case alexScan inp__ sc of
    AlexEOF -> alexEOF
    AlexError context -> genError context
    AlexSkip  inp__' _len -> do
        alexSetInput inp__'
        alexMonadScan'
    AlexToken inp__'@(_,_,_,n') _ action -> let len = n'-n in do
        alexSetInput inp__'
        action (ignorePendingBytes inp__) len

    where
        genError ((AlexPn _ lineno column),c,s,_) = do
            fp <- T.pack <$> alexGetFilePath
            line <- ( (!! (lineno - 1)) . T.lines . lazyBStoText) <$> alexGetContent
            let token = T.take 50 . head . T.words . lazyBStoText $ s
                header = fp <> ":" <> T.pack (show lineno) <> ":" <> T.pack (show column) <> ": "
                gap = 1 + (length $ show lineno)
                bottomHighlight = T.replicate (column) " " <> T.replicate (T.length token) "^"
            alexError . T.unpack . T.unlines $ 
                [  
                header <> "error: lexical parse failure on input '" <> token <> "'", 
                T.replicate gap " " <> "|", 
                T.pack (show lineno) <> " | " <> line, 
                T.replicate gap " " <> "|" <> bottomHighlight
                ] 

-- Getter for the filepath from the user state 
alexGetFilePath :: Alex FilePath
alexGetFilePath = 
    Alex $ \s@(AlexState _ _ _ _ _ (AlexUserState fp _)) -> Right (s, fp)

--   Getter for the file content from the user state 
alexGetContent :: Alex B.ByteString
alexGetContent = 
    Alex $ \s@(AlexState _ _ _ _ _ (AlexUserState _ c)) -> Right (s, c)

-- Needed by the generated runAlex function.
-- Note that we don't use that function thus it can be left undefined
alexInitUserState = undefined

-- Runner of the lexer.
-- Takes the filepath and its contents
-- and returns a failure message or a list of tokens
tokenize :: FilePath -> B.ByteString -> Either T.Text [Token]
tokenize fp input = 
    case (unAlex getAllResults) state of
        Left msg -> Left . T.pack $ msg
        Right ( _, a ) -> Right a
    where
        state = AlexState { 
            alex_bpos = 0, 
            alex_pos  = alexStartPos, 
            alex_inp  = input, 
            alex_chr  = '\n', 
            alex_ust = AlexUserState fp input, 
            alex_scd = 0 
        } 



mlc :: Int
mlc = 1
alex_action_0 =  begin 0 
alex_action_1 =  skip 
alex_action_2 =  skip 
alex_action_3 =  skip 
alex_action_4 =  begin mlc 
alex_action_5 =  skip 
alex_action_6 =  skip 
alex_action_7 =  \ctx len -> return $ produceToken (\_ _ -> KeywordToken Var) ctx len
alex_action_8 =  \ctx len -> return $ produceToken (\_ _ -> KeywordToken If) ctx len
alex_action_9 =  \ctx len -> return $ produceToken (\_ _ -> KeywordToken Else) ctx len
alex_action_10 =  \ctx len -> return $ produceToken (\_ _ -> KeywordToken While) ctx len
alex_action_11 =  \ctx len -> return $ produceToken (\_ _ -> KeywordToken Return)ctx len
alex_action_12 =  \ctx len -> return $ produceToken (\_ _ -> TypeToken VoidType) ctx len
alex_action_13 =  \ctx len -> return $ produceToken (\_ _ -> TypeToken CharType) ctx len
alex_action_14 =  \ctx len -> return $ produceToken (\_ _ -> TypeToken BoolType) ctx len
alex_action_15 =  \ctx len -> return $ produceToken (\_ _ -> TypeToken IntType) ctx len
alex_action_16 =  token (produceToken (\ctx len -> SymbolToken . T.head $ getCurrentToken ctx len )) 
alex_action_17 =  \ctx len -> return $ produceToken (\_ _ -> BoolToken True) ctx len
alex_action_18 =  \ctx len -> return $ produceToken (\_ _ -> BoolToken False) ctx len
alex_action_19 =  token (produceToken (\ctx len -> IntToken . read . T.unpack $ getCurrentToken ctx len)) 
alex_action_20 =  token (produceToken (\ctx len -> IdentifierToken $ getCurrentToken ctx len )) 
alex_action_21 =  token (produceToken (\ctx len -> CharToken $ flip T.index 1 $ getCurrentToken ctx len )) 
alex_action_22 =  token (produceToken (\ctx len -> CharToken $ flip T.index 1 $ getCurrentToken ctx len )) 
{-# LINE 1 "templates/GenericTemplate.hs" #-}
-- -----------------------------------------------------------------------------
-- ALEX TEMPLATE
--
-- This code is in the PUBLIC DOMAIN; you may copy it freely and use
-- it for any purpose whatsoever.

-- -----------------------------------------------------------------------------
-- INTERNALS and main scanner engine




































































alexIndexInt16OffAddr arr off = arr ! off
























alexIndexInt32OffAddr arr off = arr ! off











quickIndex arr i = arr ! i


-- -----------------------------------------------------------------------------
-- Main lexing routines

data AlexReturn a
  = AlexEOF
  | AlexError  !AlexInput
  | AlexSkip   !AlexInput !Int
  | AlexToken  !AlexInput !Int a

-- alexScan :: AlexInput -> StartCode -> AlexReturn a
alexScan input__ (sc)
  = alexScanUser undefined input__ (sc)

alexScanUser user__ input__ (sc)
  = case alex_scan_tkn user__ input__ (0) input__ sc AlexNone of
  (AlexNone, input__') ->
    case alexGetByte input__ of
      Nothing ->



                                   AlexEOF
      Just _ ->



                                   AlexError input__'

  (AlexLastSkip input__'' len, _) ->



    AlexSkip input__'' len

  (AlexLastAcc k input__''' len, _) ->



    AlexToken input__''' len (alex_actions ! k)


-- Push the input through the DFA, remembering the most recent accepting
-- state it encountered.

alex_scan_tkn user__ orig_input len input__ s last_acc =
  input__ `seq` -- strict in the input
  let
  new_acc = (check_accs (alex_accept `quickIndex` (s)))
  in
  new_acc `seq`
  case alexGetByte input__ of
     Nothing -> (new_acc, input__)
     Just (c, new_input) ->



      case fromIntegral c of { (ord_c) ->
        let
                base   = alexIndexInt32OffAddr alex_base s
                offset = (base + ord_c)
                check  = alexIndexInt16OffAddr alex_check offset

                new_s = if (offset >= (0)) && (check == ord_c)
                          then alexIndexInt16OffAddr alex_table offset
                          else alexIndexInt16OffAddr alex_deflt s
        in
        case new_s of
            (-1) -> (new_acc, input__)
                -- on an error, we want to keep the input *before* the
                -- character that failed, not after.
            _ -> alex_scan_tkn user__ orig_input (if c < 0x80 || c >= 0xC0 then (len + (1)) else len)
                                                -- note that the length is increased ONLY if this is the 1st byte in a char encoding)
                        new_input new_s new_acc
      }
  where
        check_accs (AlexAccNone) = last_acc
        check_accs (AlexAcc a  ) = AlexLastAcc a input__ (len)
        check_accs (AlexAccSkip) = AlexLastSkip  input__ (len)

        check_accs (AlexAccPred a predx rest)
           | predx user__ orig_input (len) input__
           = AlexLastAcc a input__ (len)
           | otherwise
           = check_accs rest
        check_accs (AlexAccSkipPred predx rest)
           | predx user__ orig_input (len) input__
           = AlexLastSkip input__ (len)
           | otherwise
           = check_accs rest


data AlexLastAcc
  = AlexNone
  | AlexLastAcc !Int !AlexInput !Int
  | AlexLastSkip     !AlexInput !Int

data AlexAcc user
  = AlexAccNone
  | AlexAcc Int
  | AlexAccSkip

  | AlexAccPred Int (AlexAccPred user) (AlexAcc user)
  | AlexAccSkipPred (AlexAccPred user) (AlexAcc user)

type AlexAccPred user = user -> AlexInput -> Int -> AlexInput -> Bool

-- -----------------------------------------------------------------------------
-- Predicates on a rule

alexAndPred p1 p2 user__ in1 len in2
  = p1 user__ in1 len in2 && p2 user__ in1 len in2

--alexPrevCharIsPred :: Char -> AlexAccPred _
alexPrevCharIs c _ input__ _ _ = c == alexInputPrevChar input__

alexPrevCharMatches f _ input__ _ _ = f (alexInputPrevChar input__)

--alexPrevCharIsOneOfPred :: Array Char Bool -> AlexAccPred _
alexPrevCharIsOneOf arr _ input__ _ _ = arr ! alexInputPrevChar input__

--alexRightContext :: Int -> AlexAccPred _
alexRightContext (sc) user__ _ _ input__ =
     case alex_scan_tkn user__ input__ (0) input__ sc AlexNone of
          (AlexNone, _) -> False
          _ -> True
        -- TODO: there's no need to find the longest
        -- match when checking the right context, just
        -- the first match will do.

